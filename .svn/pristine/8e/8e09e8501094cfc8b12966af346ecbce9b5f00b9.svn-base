package com.feihua.jjcb.phone.db;

import org.json.JSONArray;
import org.json.JSONObject;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

public class UseDatabase
{

    Context context;
    DatabaseHelper dbhelper;
    public SQLiteDatabase sqlitedatabase;

    public UseDatabase(Context context)
    {
        super();
        this.context = context;
    }

    // 打开数据库连接
    public void opendb(Context context)
    {
        dbhelper = new DatabaseHelper(context);
        sqlitedatabase = dbhelper.getWritableDatabase();
    }

    // 关闭数据库连接
    public void closedb(Context context)
    {
        if (sqlitedatabase.isOpen())
        {
            sqlitedatabase.close();
        }
    }

    // 插入表数据
    public void insert(String table_name, ContentValues values)
    {
        opendb(context);
        sqlitedatabase.insert(table_name, null, values);
        closedb(context);
    }

    // 更新数据
    public int updatatable(String table_name, ContentValues values, int ID)
    {
        opendb(context);
        return sqlitedatabase.update(table_name, values, " Type_ID = ? ", new String[]{String.valueOf(ID)});
    }

    // 删除表数据
    public void delete(String table_name, String whereClause, String[] whereArgs)
    {
        opendb(context);
        try
        {
            for (int i = 0; i < whereArgs.length; i++)
            {
                sqlitedatabase.delete(table_name, whereClause, new String[]{whereArgs[i]});
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            closedb(context);
        }
    }

    // 删除表
    public void delete(String table_name)
    {
        opendb(context);
        try
        {

            sqlitedatabase.delete(table_name, null, null);
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            closedb(context);
        }
    }

    // 查询数据表有多少条数据
    public int queryCount()
    {
        opendb(context);
        Cursor cursor = sqlitedatabase.query(DatabaseHelper.LOCATION_TABLE_NAME, null, null, null, null, null, null);
        int count = cursor.getCount();
        cursor.close();
        return count;
    }

    // 查找数据
    public JSONArray DeptArray()
    {
        JSONArray Items = new JSONArray();
        try
        {
            opendb(context);
            String limit = null;
            if (queryCount() > 100)
            {
                limit = "100";
            }
            Cursor c = sqlitedatabase.query(DatabaseHelper.LOCATION_TABLE_NAME, null, null, null, null, null, null, limit);
            if (c != null)
            {
                boolean toFirst = c.moveToFirst();
                while (toFirst)
                {
                    JSONObject item = new JSONObject();
                    item.put("_id", c.getInt(c.getColumnIndex("_id")));
                    item.put("LONTITUDE", c.getString(c.getColumnIndex("LONTITUDE")));
                    item.put("LATITUDE", c.getString(c.getColumnIndex("LATITUDE")));
                    item.put("USER_ID", c.getString(c.getColumnIndex("USER_ID")));
                    item.put("UP_TIME", c.getString(c.getColumnIndex("UP_TIME")));
                    item.put("LOC_MODE", c.getString(c.getColumnIndex("LOC_MODE")));
                    item.put("SPEED", c.getString(c.getColumnIndex("SPEED")));
                    Items.put(item);
                    toFirst = c.moveToNext();
                }
                Log.e("DeptArray", "Items.length() = " + Items.length());
                c.close();
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            closedb(context);
        }
        return Items;
    }

}